import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.Random;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Scanner;
import com.deli.star.processor.GMapsApiProcessor;
import com.deli.star.processor.MailUtility;
import com.deli.star.response.codes.ResponseStatus;

public class Main {
	private static Scanner readInput = new Scanner(System.in);
	public static void main(String[] args) {
		
		GMapsApiProcessor getCoordinatesProcess = new GMapsApiProcessor();
		System.out.println("Accurate pluscode {?}".replace("?", 0) + getCoordinatesProcess.GetCoordinates("2V89+CR Amman"));
		System.out.println("In Between.....");
		System.out.println(getCoordinatesProcess.GetCoordinates("2V89+CR Amman"));
//		String foundToken= "2023-08-14_20:32:11.257205_3";
//		LocalDate lastRequestDate = LocalDate.parse(foundToken.split("_")[0]);
//		LocalTime lastRequestTime = LocalTime.parse(foundToken.split("_")[1]);
//		
//		System.out.println("lastRequestDate: " + lastRequestDate);
//		System.out.println("lastRequesttime: " + lastRequestTime);
//		
//		if(lastRequestDate.compareTo(LocalDate.now()) != 0 || lastRequestTime.plusMinutes(45).compareTo(LocalTime.now()) < 0) {
//			System.out.println(ResponseStatus.Session_Timed_Out.toString());
//		}
//		System.out.println("HASHEHEED Pass: "+ "moh123456789".hashCode());
//		
//		System.out.println("Enter the token to finf its length: ");
//		String token = readInput.next();
//		System.out.println("length of entered token {?} is: ".replace("?", token) + token.length());
//		
		
//		String verificationCode = "";
//		Random rand = new Random();
//		
//		for(int i=0; i< 6; i++) {
//			double numOrChar = rand.nextDouble(1, 2);
//			if(numOrChar - (int) numOrChar >= 0.5) {
//				numOrChar = Math.ceil(numOrChar);
//			}
//			else {
//				numOrChar = Math.floor(numOrChar);
//			}
//			
//			
//			if(numOrChar == 1) {
//				verificationCode += (char)rand.nextInt(65, 91);
//			}
//			else {
//				double digit = rand.nextDouble(10);
//				if(digit - (int)digit >= 0.5) {
//					verificationCode += (int)Math.ceil(digit);
//				}
//				else {
//					verificationCode += (int)Math.floor(digit);
//				}
//				
//			}
//		}
//		
//		
//		System.out.println(verificationCode);
//		
//		MailUtility sendGmail = new MailUtility();
//		String to = "mohammed.salman.jo@gmail.com";
//		
//		String subject = "DeliStar Backend super user";
//		String mssg = "Here is your verification code: ?";
//		mssg = mssg.replace("?", verificationCode);
//		
//		sendGmail.sendEmail(subject, mssg, to);
//		
//		
//		
//		
//		LocalDate today = LocalDate.now();
//		LocalDate yesterday = LocalDate.now().minusDays(1);
//		if(yesterday.compareTo(today) < 0) {
//			System.out.println(yesterday.compareTo(today));
//		}
//		
//		System.out.println(today.compareTo(yesterday));
//		System.out.println();
//		
//		
//		String plusCode = "2023-08-08T15:30:14.629Z";
//		System.out.println(plusCode);
//		plusCode = plusCode.split("T")[0];
//		
//		System.out.println(plusCode);
//		
//		GMapsApiProcessor getCoordinatesProcess  = new GMapsApiProcessor();
//		System.out.println(getCoordinatesProcess.GetCoordinates("2VFG+9F Amman"));
		
		
//		String phoneNo = "";
//		String test= "+962 799 963 891";
//		
//		for(int i =0; i< test.length(); i++) {
//			if((int)test.charAt(i) >= 48 && (int)test.charAt(i) <= 57 ||test.charAt(i) == '+') {
//				phoneNo += test.charAt(i);
//			}
//			//System.out.println("char "+ test.charAt(i) + " AsciiCodeAt " + i +": " + (int)test.charAt(i));
//		}
//		System.out.println("edited phone no: " + phoneNo);
//		
//		
//
//		
//		// Name Pattern validation.
//		Pattern namePattern = Pattern.compile("^[a-z A-Z]+$");
//
//		String customerName = "MOHAMMAD 5 SALAMN".trim();
//		Matcher nameMatcher  = namePattern.matcher(customerName);
//		
//		System.out.println("Customer name ? is:".replace("?", customerName) +  nameMatcher.find());
//		
//		
//		customerName = "MOHAMMAD SALAMN";
//		nameMatcher = namePattern.matcher(customerName);
//		
//		System.out.println("Customer name ? is:".replace("?", customerName) +  nameMatcher.find());
//		
//		customerName = "mohammad salman";
//		nameMatcher = namePattern.matcher(customerName);
//		System.out.println("Customer name ? is:".replace("?", customerName) +  nameMatcher.find());
//		
//		customerName = "Mohammad Salman";
//		nameMatcher = namePattern.matcher(customerName);
//		System.out.println("Customer name ? is:".replace("?", customerName) +  nameMatcher.find());
//		
//		
//		customerName = "mohammadSalman";
//		nameMatcher = namePattern.matcher(customerName);
//		System.out.println("Customer name ? is:".replace("?", customerName) +  nameMatcher.find());
//		
//		
//		// Phone No Pattern validation.
//		Pattern phoneNoPattern = Pattern.compile("^[+][0-9]+$");
//		
//		Matcher phoneMatcher = phoneNoPattern.matcher(test);
//		System.out.println("Phone No ? is:".replace("?", test) +  nameMatcher.find());
//		
//		
//		
//		phoneMatcher = phoneNoPattern.matcher(phoneNo);
//		System.out.println("Phone No ? is:".replace("?", phoneNo) +  phoneMatcher.find());
//		
//		phoneNo = "96279999+6891";
//		phoneMatcher = phoneNoPattern.matcher(phoneNo);
//		System.out.println("Phone No ? is:".replace("?", phoneNo) +  phoneMatcher.find());
//		
//		phoneNo = "962799996891";
//		phoneMatcher = phoneNoPattern.matcher(phoneNo);
//		System.out.println("Phone No ? is:".replace("?", phoneNo) +  phoneMatcher.find());
//		
//		String gender = "Female".toLowerCase();
//		System.out.println("edited Gender: " + gender);
//		
//		// Gender Pattern validation.
//		Pattern genderPattern = Pattern.compile("female|male");
//		Matcher genderMatcher = genderPattern.matcher(gender);
//		System.out.println("Gender ? is:".replace("?", gender) +  genderMatcher.find());
//		
//		gender = (char)((int)gender.charAt(0) - 32) + gender.substring(1);
//		System.out.println("edited Gender: " + gender);
//		
		
		// Email Pattern validation.
//		Pattern emailPattern = Pattern.compile("^[_A-Za-z0-9-]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
//		
//		String email ="mohammed.salman.jo@gmail.com";
//		Matcher emailMatcher = emailPattern.matcher(email);
//		System.out.println("Email ? is: ".replace("?", email) + emailMatcher.find());
//		
//		String orderNumber = "55";
//		Pattern orderNumberPattern = Pattern.compile("^[0-9]+$");
//		
//		Matcher orderNumberMatcher = orderNumberPattern.matcher(orderNumber);
//		System.out.println("Order Number ? is: ".replace("?", orderNumber) + orderNumberMatcher.find());
		
		
		/*LocalDateTime test222;
		System.out.println("test222: " + test222.now);*/
		
		// String plusCode = "XW55+PWG Amman";
		
		/*
		GMapsApiProcessor getCoordinatesProcess = new GMapsApiProcessor();
		System.out.println(getCoordinatesProcess.GetCoordinates(plusCode));
		System.out.println(getCoordinatesProcess.GetEstimatedTime(31.9569375, 35.9828281, 37.4219983, -122.084));
		System.out.println(getCoordinatesProcess.GetEstimatedTime(31.9572212, 35.9834119, 31.9558162, 35.9273551));
		*/
		
		/*
		
		ArrayList<Integer> nums = new ArrayList<>();
		//System.out.println(nums.size());
		String pass = "moh123456789";
		System.out.println(pass.hashCode());
		for(int i =0; i< 3; i++){
			nums.add(i+1);
			System.out.println(nums.size());
		}
		
		*/
		
		
		
		/*int i = 0;
		while(i< 26) {
			System.out.println((char)(97+i));
			System.out.println((char)(65+i));
			i++;
		}*/
		
		
		
		
		
		
		/*String plusCode = "XX4M+Q4G Amman";
		try{
			File test = new File("company_orders.csv");
			Scanner input = new Scanner(System.in);
			FileInputStream inStream = new FileInputStream("SerializedFile.txt");
			
			
			ObjectInputStream in = new ObjectInputStream(inStream);
			File result = new File("result.txt");
			File de_Serialized = (File)in.readObject();
			if(result.createNewFile()) {
				FileWriter write = new FileWriter(result);
				FileReader reader = new FileReader(de_Serialized);
				reader.transferTo(write);
				System.out.println("DONE!!!!");
			}
			if(test.createNewFile()) {
				FileWriter writer = new FileWriter(test);
				writer.write("order_id,"
						+ "order_number,"
						+ "order_report,"
						+ "order_state,"
						+ "order_rank,"
						+ "order_delivery_date date, "
						+ "order_drop_off_address,"
						+ "order_location_link,"
						+ "customer_id,"
						+ "driver_id,"
						+ "company_id,"
						+ "location_coordinates");
				System.out.println(test.getAbsolutePath());
				writer.close();
			}
			String answer = input.next();
			String checkResponse = ResponseStatus.Driver_Banned.toString();
			System.out.println(checkResponse);
			input.next();
			if(answer.equals("yes")) {
//				FileOutputStream fileStream = new FileOutputStream("SerializedFile.txt");
//				ObjectOutputStream out = new ObjectOutputStream(fileStream);
//				out.writeObject(test);
//				System.out.println(out.toString());
				System.out.println(test.toString());
				
				byte[] testFileBytes = Files.readAllBytes(test.toPath());
				JSONObject json = new JSONObject();
				JSONArray bytesArr = new JSONArray();
				for(byte byteItr : testFileBytes) {
					bytesArr.add(bytesArr);
				}
				
				json.put("file", bytesArr);
				
				
				test.delete();
				
				
				System.out.println("deleted");
				
				
				//System.out.println(json);
				input.close();
			}
		}catch(Exception e) {
			e.printStackTrace();
			System.out.println(e.getMessage());
		}*/
		
////		if(ResponseStatus.DriverBanned.toString() == requestingAdmin.getAdminToken().toString()) {
////			response.put("status", ResponseStatus.DriverBanned.toString());
////			response.put("adminToken", requestingAdmin.getAdminToken().toString());
////			return response.toString();
////		}
////		ResponseStatus[] responses = ResponseStatus.class.getEnumConstants();
////		for(ResponseStatus responseItr : responses) {
////			if(requestingAdmin.getAdminToken().toString() == responseItr.toString()) {
////				response.put("status", requestingAdmin.getAdminToken().toString());
////				return response.toString();
////			}
////		}
////		
////		response.put("status", ResponseStatus.Failed.toString());
////		response.put("adminToken", requestingAdmin.getAdminToken().toString());
////		return response.toString();	
////		
//		
//		
//		
//		
//		
//		response.put("status", ResponseStatus.Success.toString());
//		response.put("adminToken", requestingAdmin.getAdminToken().toString());
//		return response.toString();
//		
		
		
		
		
		
		
////		if(ResponseStatus.DriverBanned.toString() == requestingDriver.getDriverToken().toString()) {
////			response.put("status", ResponseStatus.DriverBanned.toString());
////			response.put("driverToken", requestingDriver.getDriverToken().toString());
////			return response.toString();
////		}
////		ResponseStatus[] responses = ResponseStatus.class.getEnumConstants();
////		for(ResponseStatus responseItr : responses) {
////			if(requestingDriver.getDriverToken().toString() == responseItr.toString()) {
////				response.put("status", requestingDriver.getDriverToken().toString());
////				return response.toString();
////			}
////		}
////		
////		response.put("status", ResponseStatus.Failed.toString());
////		response.put("driverToken", requestingDriver.getDriverToken().toString());
////		return response.toString();
////		
////		
////		
////		
//		
//		
//		response.put("status", ResponseStatus.Success.toString());
//		response.put("driverToken", requestingDriver.getDriverToken().toString());
//		return response.toString();
//		
//		
		
		
//		plusCode = ResponseStatus.InvalidAccess.toString();
//		if(Object.class.isEnum()) {
//			
//		}
//		
//		ResponseStatus[] responses = ResponseStatus.class.getEnumConstants();
//		for(ResponseStatus responseItr : responses) {
//			System.out.println("Printing: " + responseItr.toString());
//			if(plusCode.toString() == responseItr.toString()) {
//				System.out.println(responseItr);
//				System.out.println(responseItr.toString());
//			}
//		}
//		
		/**/
		//GMapsApiProcessor getCoordinatesProcess = new GMapsApiProcessor();
		//System.out.println(getCoordinatesProcess.GetCoordinates(plusCode));
		
		//System.out.println(getCoordinatesProcess.GetEstimatedTime(31.9569375, 35.9828281, 31.9671875, 35.9088125));
		//System.out.println(getCoordinatesProcess.GetEstimatedTime(31.9572212, 35.9834119, 31.9558162, 35.9273551));
		
		
		/*OpenStreetMapApi getCoordinatesProcess  = new OpenStreetMapApi();
		getCoordinatesProcess.GetCoordinates(plusCode);*/
		
		
		
//		LocalDate date = LocalDate.now();
//		
//		
//		System.out.println(date); 
//		try {
//			 DAO testing = new DAO();
//			JSONParser parser = new JSONParser();
//		      String s = "[0,{\"1\":{\"2\":{\"3\":{\"4\":[5,{\"6\":7}]}}}}]";
//				
//		      try{
//		         Object obj = (JSONObject)parser.parse(s);
//		         JSONArray array = (JSONArray)obj;
//					
//		         System.out.println("The 2nd element of array");
//		         System.out.println(array.get(1));
//		         System.out.println();
//			
//		}catch(Exception exception) {
//			System.out.println("Exception:" +exception.getMessage());
//		}
	}
}
