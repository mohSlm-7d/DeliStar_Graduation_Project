package com.deli.star.processor;

import com.deli.star.DTO.Driver;
import com.deli.star.authentication.TokenAuthValidator;
import com.deli.star.dao.DAO;
import com.deli.star.response.codes.ResponseStatus;

public class DriverLogOutProcessor {
	public boolean LogOut(Driver requestingDriver) {
		try {			
			
			DAO updateTokenLogout = new DAO();
			
//			// Checking if the driver is already logged in then the request is invalid.
//			Driver foundDriver = updateTokenLogout.GetDriverCredentials(requestingDriver);
//			if(foundDriver.getDriverToken() == null) {
//				requestingDriver.setDriverToken(ResponseStatus.Invalid_Access.toString());
//				return false;
//			}
			
			
			// Driver Authentication by token.
			TokenAuthValidator driverAuth = new TokenAuthValidator();
			boolean authentic = driverAuth.ValidateDriverToken(requestingDriver);
			if(!authentic) {
				return false;
			}
			
			
			requestingDriver.setDriverToken(null);
			boolean updated = updateTokenLogout.UpdateDriverToken(requestingDriver);
			
			if(!updated) {
				return false;
			}
		
			return true;
		}catch(Exception e) {
			e.printStackTrace();
			System.out.println(e.getMessage());
		}
		
		return false;
	}
}
